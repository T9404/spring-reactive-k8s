apiVersion: apps/v1
kind: Deployment
metadata:
  name: sergeyttser-postgres
spec:
  replicas: 1
  selector:
    matchLabels:
      app: postgres
  template:
    metadata:
      labels:
        app: postgres
    spec:
      containers:
        - name: postgres
          image: sergeyttser/postgres:latest
          imagePullPolicy: "IfNotPresent"
          ports:
            - containerPort: 5432
          env:
            - name: POSTGRES_USER
              valueFrom:
                secretKeyRef:
                  name: database-secrets
                  key: username
            - name: POSTGRES_DB
              valueFrom:
                secretKeyRef:
                  name: database-secrets
                  key: database
            - name: POSTGRES_PASSWORD
              valueFrom:
                secretKeyRef:
                  name: database-secrets
                  key: password

---
apiVersion: v1
kind: Service
metadata:
  name: sergeyttser-postgres
spec:
  selector:
    app: postgres
  ports:
    - protocol: TCP
      port: 5432
      targetPort: 5432


---
apiVersion: apps/v1
kind: Deployment
metadata:
  name: sergeyttser-migration
spec:
  replicas: 1
  selector:
    matchLabels:
      app: liquibase
  template:
    metadata:
      labels:
        app: liquibase
    spec:
      initContainers:
        - name: "wait-for-postgres"
          image: busybox
          command: ["sh", "-c", "until nc -z sergeyttser-postgres 5432; do sleep 1; done;"]
      containers:
        - name: liquibase
          image: sergeyttser/test-db:latest
          imagePullPolicy: "IfNotPresent"
          args: ["update"]
          env:
            - name: DB_DATABASE
              valueFrom:
                secretKeyRef:
                  name: database-secrets
                  key: database
            - name: DB_PORT
              value: "5432"
            - name: DB_HOST
              value: "sergeyttser-postgres"
            - name: DB_PASSWORD
              valueFrom:
                secretKeyRef:
                  name: database-secrets
                  key: password
            - name: DB_SCHEMA
              value: "public"
            - name: DB_USER
              valueFrom:
                secretKeyRef:
                  name: database-secrets
                  key: username

---
apiVersion: apps/v1
kind: Deployment
metadata:
  name: sergeyttser-api
spec:
  replicas: 2
  selector:
    matchLabels:
      app: api-application
  template:
    metadata:
      labels:
        app: api-application
    spec:
      containers:
        - name: api-application
          image: sergeyttser/monitoring-api-application:latest
          imagePullPolicy: "IfNotPresent"
          ports:
            - containerPort: 9091
            - containerPort: 8080
          env:
            - name: DB_DATABASE
              valueFrom:
                secretKeyRef:
                  name: database-secrets
                  key: database
            - name: DB_PORT
              value: "5432"
            - name: DB_HOST
              value: "sergeyttser-postgres"
            - name: DB_PASSWORD
              valueFrom:
                secretKeyRef:
                  name: database-secrets
                  key: password
            - name: DB_SCHEMA
              value: "public"
            - name: DB_USER
              valueFrom:
                secretKeyRef:
                  name: database-secrets
                  key: username
          readinessProbe:
            httpGet:
              path: /actuator/health
              port: 8080
            initialDelaySeconds: 5
            periodSeconds: 5

---
apiVersion: v1
kind: Service
metadata:
  name: sergeyttser-api
spec:
  type: NodePort
  selector:
    app: api-application
  ports:
    - name: http
      protocol: TCP
      port: 8080
      targetPort: 8080
    - name: grpc
      protocol: TCP
      port: 9091
      targetPort: 9091

---
apiVersion: v1
kind: ConfigMap
metadata:
  name: prometheus-config
data:
  prometheus.yml: |
    global:
      scrape_interval: 15s
    
    scrape_configs:
      - job_name: 'prometheus'
        static_configs:
          - targets: ['localhost:9090']

---
apiVersion: apps/v1
kind: Deployment
metadata:
  name: sergeyttser-grafana
spec:
  replicas: 1
  selector:
    matchLabels:
      app: grafana
  template:
    metadata:
      labels:
        app: grafana
    spec:
      containers:
        - name: grafana
          image: sergeyttser/grafana:latest
          imagePullPolicy: "IfNotPresent"
          ports:
            - containerPort: 3000
          env:
            - name: GF_SECURITY_ADMIN_USER
              valueFrom:
                secretKeyRef:
                  name: grafana
                  key: gf_security_admin_user
            - name: GF_SECURITY_ADMIN_PASSWORD
              valueFrom:
                secretKeyRef:
                  name: grafana
                  key: gf_security_admin_password

---
apiVersion: apps/v1
kind: DaemonSet
metadata:
  name: sergeyttser-node-exporter
spec:
  selector:
    matchLabels:
      app: node-exporter
  template:
    metadata:
      labels:
        app: node-exporter
    spec:
      containers:
        - name: node-exporter
          image: sergeyttser/node-exporter:latest
          imagePullPolicy: "IfNotPresent"
          ports:
            - containerPort: 9100
          securityContext:
            privileged: true
          volumeMounts:
            - name: proc
              mountPath: /host/proc
              readOnly: true
            - name: sys
              mountPath: /host/sys
              readOnly: true
            - name: rootfs
              mountPath: /rootfs
              readOnly: true
      volumes:
        - name: proc
          hostPath:
            path: /proc
        - name: sys
          hostPath:
            path: /sys
        - name: rootfs
          hostPath:
            path: /

---
apiVersion: apps/v1
kind: Deployment
metadata:
  name: sergeyttser-prometheus
spec:
  replicas: 1
  selector:
    matchLabels:
      app: prometheus
  template:
    metadata:
      labels:
        app: prometheus
    spec:
      containers:
        - name: prometheus
          image: sergeyttser/prometheus:latest
          imagePullPolicy: "IfNotPresent"
          ports:
            - containerPort: 9090
          volumeMounts:
            - name: prometheus-config
              mountPath: /etc/prometheus/prometheus.yml
              subPath: prometheus.yml
            - name: prometheus-data
              mountPath: /prometheus
      volumes:
        - name: prometheus-config
          configMap:
            name: prometheus-config
        - name: prometheus-data
          emptyDir: {}

---
apiVersion: v1
kind: Service
metadata:
  name: prometheus
spec:
  selector:
    app: prometheus
  ports:
    - protocol: TCP
      port: 9090
      targetPort: 9090
